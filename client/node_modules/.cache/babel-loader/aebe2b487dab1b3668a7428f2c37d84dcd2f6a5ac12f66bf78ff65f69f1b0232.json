{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport axios from 'axios';\nconst UserAccount = async e => {\n  _s();\n  const [formData, setFormData] = useState({\n    favoriteGenres: [],\n    favoriteActors: [],\n    preferredLanguage: [],\n    preferredNews: []\n  });\n  const findNews = async e => {\n    const response = await axios.post('http://localhost:3001/generateNews', formData);\n    console.log(response.data);\n  };\n  const location = useLocation();\n  useEffect(() => {\n    const username = location.state.username;\n    const favoriteGenres = location.state.favoriteGenres;\n    const favoriteActors = location.state.favoriteActors;\n    const preferredLanguage = location.state.preferredLanguage;\n    const preferredNews = location.state.preferredNews;\n    setFormData({\n      ...formData,\n      favoriteGenres: favoriteGenres,\n      favoriteActors: favoriteActors,\n      preferredLanguage: preferredLanguage,\n      preferredNews: preferredNews\n    });\n    findNews();\n  }, [location]);\n};\n_s(UserAccount, \"HAoX4VrZWqpZerZWnq3Xv9VopRA=\", false, function () {\n  return [useLocation];\n});\n_c = UserAccount;\nexport default UserAccount;\nvar _c;\n$RefreshReg$(_c, \"UserAccount\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","axios","UserAccount","e","_s","formData","setFormData","favoriteGenres","favoriteActors","preferredLanguage","preferredNews","findNews","response","post","console","log","data","location","username","state","_c","$RefreshReg$"],"sources":["C:/Users/rishi/MovieApp/movie-app/client/src/components/UserAccount.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nconst UserAccount = async(e) => {\r\n    const [formData, setFormData] = useState({\r\n        favoriteGenres: [],\r\n        favoriteActors: [],\r\n        preferredLanguage: [],\r\n        preferredNews: [],\r\n    });\r\n    const findNews = async(e) => {\r\n        const response = await axios.post('http://localhost:3001/generateNews', formData);\r\n        console.log(response.data);\r\n    }\r\n    const location = useLocation();\r\n    useEffect(() => {\r\n        const username = location.state.username;\r\n        const favoriteGenres = location.state.favoriteGenres;\r\n        const favoriteActors = location.state.favoriteActors;\r\n        const preferredLanguage = location.state.preferredLanguage;\r\n        const preferredNews = location.state.preferredNews;\r\n        setFormData({...formData, \r\n            favoriteGenres: favoriteGenres, \r\n            favoriteActors: favoriteActors, \r\n            preferredLanguage: preferredLanguage, \r\n            preferredNews: preferredNews\r\n        });\r\n        findNews();\r\n\r\n    }, [location]);\r\n    \r\n}\r\n\r\nexport default UserAccount;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAGzB,MAAMC,WAAW,GAAG,MAAMC,CAAC,IAAK;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACrCS,cAAc,EAAE,EAAE;IAClBC,cAAc,EAAE,EAAE;IAClBC,iBAAiB,EAAE,EAAE;IACrBC,aAAa,EAAE;EACnB,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAG,MAAMR,CAAC,IAAK;IACzB,MAAMS,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,oCAAoC,EAAER,QAAQ,CAAC;IACjFS,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;EAC9B,CAAC;EACD,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAC9BD,SAAS,CAAC,MAAM;IACZ,MAAMmB,QAAQ,GAAGD,QAAQ,CAACE,KAAK,CAACD,QAAQ;IACxC,MAAMX,cAAc,GAAGU,QAAQ,CAACE,KAAK,CAACZ,cAAc;IACpD,MAAMC,cAAc,GAAGS,QAAQ,CAACE,KAAK,CAACX,cAAc;IACpD,MAAMC,iBAAiB,GAAGQ,QAAQ,CAACE,KAAK,CAACV,iBAAiB;IAC1D,MAAMC,aAAa,GAAGO,QAAQ,CAACE,KAAK,CAACT,aAAa;IAClDJ,WAAW,CAAC;MAAC,GAAGD,QAAQ;MACpBE,cAAc,EAAEA,cAAc;MAC9BC,cAAc,EAAEA,cAAc;MAC9BC,iBAAiB,EAAEA,iBAAiB;MACpCC,aAAa,EAAEA;IACnB,CAAC,CAAC;IACFC,QAAQ,CAAC,CAAC;EAEd,CAAC,EAAE,CAACM,QAAQ,CAAC,CAAC;AAElB,CAAC;AAAAb,EAAA,CA5BKF,WAAW;EAAA,QAWIF,WAAW;AAAA;AAAAoB,EAAA,GAX1BlB,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}