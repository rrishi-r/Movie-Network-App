{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rishi\\\\MovieApp\\\\movie-app\\\\client\\\\src\\\\Selections.js\",\n  _s = $RefreshSig$();\nimport { useCallback } from 'react';\nimport 'survey-core/defaultV2.min.css';\nimport React, { useState } from 'react';\nimport { Model } from 'survey-core';\nimport { Survey } from 'survey-react-ui';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport Results from './Results.js';\nimport { useParams } from 'react-router-dom';\nimport OMDP_API_KEY from './omdp_api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst surveyJson = {\n  elements: [{\n    name: \"MovieType\",\n    title: \"Enter movie type (movie, series, episode):\",\n    type: \"text\"\n  }, {\n    name: \"YearRelease\",\n    title: \"Enter year of release:\",\n    type: \"text\"\n  }, {\n    name: \"KeyWord\",\n    title: \"Enter a key word to help find a movie for you!\",\n    type: \"text\"\n  }]\n};\nfunction Selections() {\n  _s();\n  const historyCommand = useHistory();\n  const survey = new Model(surveyJson);\n  console.log('starting app!!');\n  const alertResults = useCallback(sender => {\n    const results = JSON.stringify(sender.data);\n    const userEntries = JSON.parse(results);\n    const movieType = userEntries.MovieType;\n    const yearRelease = userEntries.YearRelease;\n    const keyWord = String(userEntries.KeyWord);\n    var movieURL = 'http://www.omdbapi.com/?';\n    console.log(\"KEYWORD\", keyWord);\n    console.log(\"KEYWORD LENGTH\", keyWord.length);\n    if (keyWord != undefined) {\n      movieURL = movieURL.concat('s=');\n      movieURL = movieURL.concat(keyWord);\n      console.log(\"updated movie URL\", movieURL);\n    }\n    if (movieType != undefined) {\n      movieURL = movieURL.concat('&type=');\n      movieURL = movieURL.concat(movieType);\n    }\n    if (yearRelease != undefined) {\n      movieURL = movieURL.concat('&y=');\n      movieURL = movieURL.concat(yearRelease);\n    }\n    movieURL = movieURL.concat('&apikey=' + OMDP_API_KEY);\n    alert(results);\n    var argument = '/Results?urlValue=';\n    argument = argument.concat(encodeURIComponent(movieURL));\n    historyCommand.push(argument);\n  }, []);\n  survey.onComplete.add(alertResults);\n  return /*#__PURE__*/_jsxDEV(Survey, {\n    model: survey\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n}\n_s(Selections, \"vqcf3jWLy0ll3a4Sja5dX4vnr+I=\", false, function () {\n  return [useHistory];\n});\n_c = Selections;\nexport default Selections;\nvar _c;\n$RefreshReg$(_c, \"Selections\");","map":{"version":3,"names":["useCallback","React","useState","Model","Survey","axios","useHistory","Results","useParams","OMDP_API_KEY","jsxDEV","_jsxDEV","surveyJson","elements","name","title","type","Selections","_s","historyCommand","survey","console","log","alertResults","sender","results","JSON","stringify","data","userEntries","parse","movieType","MovieType","yearRelease","YearRelease","keyWord","String","KeyWord","movieURL","length","undefined","concat","alert","argument","encodeURIComponent","push","onComplete","add","model","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/rishi/MovieApp/movie-app/client/src/Selections.js"],"sourcesContent":["import { useCallback } from 'react';\r\n\r\nimport 'survey-core/defaultV2.min.css';\r\nimport React, { useState } from 'react';\r\nimport { Model } from 'survey-core';\r\nimport { Survey } from 'survey-react-ui';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Results from './Results.js';\r\nimport { useParams } from 'react-router-dom';\r\nimport OMDP_API_KEY from './omdp_api.js';\r\n\r\nconst surveyJson = {\r\n  elements: [{\r\n    name: \"MovieType\",\r\n    title: \"Enter movie type (movie, series, episode):\",\r\n    type: \"text\"\r\n  }, {\r\n    name: \"YearRelease\",\r\n    title: \"Enter year of release:\",\r\n    type: \"text\"\r\n\t}, {\r\n\tname: \"KeyWord\",\r\n    title: \"Enter a key word to help find a movie for you!\",\r\n    type: \"text\"\r\n  }]\r\n};\r\n\r\nfunction Selections() {\r\n  const historyCommand = useHistory();\r\n  const survey = new Model(surveyJson);\r\n  console.log('starting app!!');\r\n  const alertResults = useCallback((sender) => {\r\n    const results = JSON.stringify(sender.data);\r\n\tconst userEntries = JSON.parse(results);\r\n\tconst movieType = userEntries.MovieType;\r\n\tconst yearRelease = userEntries.YearRelease;\r\n\tconst keyWord = String(userEntries.KeyWord);\r\n\tvar movieURL = 'http://www.omdbapi.com/?';\r\n\t\tconsole.log(\"KEYWORD\", keyWord);\r\n\t\tconsole.log(\"KEYWORD LENGTH\", keyWord.length);\r\n\t\tif(keyWord != undefined){\r\n\t\t\tmovieURL = movieURL.concat('s=');\r\n\t\t\tmovieURL = movieURL.concat(keyWord);\r\n\t\t\tconsole.log(\"updated movie URL\", movieURL);\r\n\t\t} \r\n\t\tif(movieType != undefined){\r\n\t\t\tmovieURL = movieURL.concat('&type=');\r\n\t\t\tmovieURL = movieURL.concat(movieType);\r\n\t\t}\r\n\t\tif(yearRelease != undefined){\r\n\t\t\tmovieURL = movieURL.concat('&y=');\r\n\t\t\tmovieURL = movieURL.concat(yearRelease);\r\n\t\t}\r\n\t\tmovieURL = movieURL.concat('&apikey=' + OMDP_API_KEY);\r\n\talert(results);\r\n\tvar argument = '/Results?urlValue=';\r\n\targument = argument.concat(encodeURIComponent(movieURL));\r\n\thistoryCommand.push(argument);\r\n  }, []);\r\n\r\n  survey.onComplete.add(alertResults);\r\n\r\n  return <Survey model={survey} />;\r\n}\r\n\r\nexport default Selections;"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,OAAO;AAEnC,OAAO,+BAA+B;AACtC,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,OAAO,MAAM,cAAc;AAClC,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,YAAY,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAG;EACjBC,QAAQ,EAAE,CAAC;IACTC,IAAI,EAAE,WAAW;IACjBC,KAAK,EAAE,4CAA4C;IACnDC,IAAI,EAAE;EACR,CAAC,EAAE;IACDF,IAAI,EAAE,aAAa;IACnBC,KAAK,EAAE,wBAAwB;IAC/BC,IAAI,EAAE;EACT,CAAC,EAAE;IACHF,IAAI,EAAE,SAAS;IACZC,KAAK,EAAE,gDAAgD;IACvDC,IAAI,EAAE;EACR,CAAC;AACH,CAAC;AAED,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,cAAc,GAAGb,UAAU,CAAC,CAAC;EACnC,MAAMc,MAAM,GAAG,IAAIjB,KAAK,CAACS,UAAU,CAAC;EACpCS,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;EAC7B,MAAMC,YAAY,GAAGvB,WAAW,CAAEwB,MAAM,IAAK;IAC3C,MAAMC,OAAO,GAAGC,IAAI,CAACC,SAAS,CAACH,MAAM,CAACI,IAAI,CAAC;IAC9C,MAAMC,WAAW,GAAGH,IAAI,CAACI,KAAK,CAACL,OAAO,CAAC;IACvC,MAAMM,SAAS,GAAGF,WAAW,CAACG,SAAS;IACvC,MAAMC,WAAW,GAAGJ,WAAW,CAACK,WAAW;IAC3C,MAAMC,OAAO,GAAGC,MAAM,CAACP,WAAW,CAACQ,OAAO,CAAC;IAC3C,IAAIC,QAAQ,GAAG,0BAA0B;IACxCjB,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEa,OAAO,CAAC;IAC/Bd,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEa,OAAO,CAACI,MAAM,CAAC;IAC7C,IAAGJ,OAAO,IAAIK,SAAS,EAAC;MACvBF,QAAQ,GAAGA,QAAQ,CAACG,MAAM,CAAC,IAAI,CAAC;MAChCH,QAAQ,GAAGA,QAAQ,CAACG,MAAM,CAACN,OAAO,CAAC;MACnCd,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEgB,QAAQ,CAAC;IAC3C;IACA,IAAGP,SAAS,IAAIS,SAAS,EAAC;MACzBF,QAAQ,GAAGA,QAAQ,CAACG,MAAM,CAAC,QAAQ,CAAC;MACpCH,QAAQ,GAAGA,QAAQ,CAACG,MAAM,CAACV,SAAS,CAAC;IACtC;IACA,IAAGE,WAAW,IAAIO,SAAS,EAAC;MAC3BF,QAAQ,GAAGA,QAAQ,CAACG,MAAM,CAAC,KAAK,CAAC;MACjCH,QAAQ,GAAGA,QAAQ,CAACG,MAAM,CAACR,WAAW,CAAC;IACxC;IACAK,QAAQ,GAAGA,QAAQ,CAACG,MAAM,CAAC,UAAU,GAAGhC,YAAY,CAAC;IACtDiC,KAAK,CAACjB,OAAO,CAAC;IACd,IAAIkB,QAAQ,GAAG,oBAAoB;IACnCA,QAAQ,GAAGA,QAAQ,CAACF,MAAM,CAACG,kBAAkB,CAACN,QAAQ,CAAC,CAAC;IACxDnB,cAAc,CAAC0B,IAAI,CAACF,QAAQ,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAENvB,MAAM,CAAC0B,UAAU,CAACC,GAAG,CAACxB,YAAY,CAAC;EAEnC,oBAAOZ,OAAA,CAACP,MAAM;IAAC4C,KAAK,EAAE5B;EAAO;IAAA6B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAClC;AAAClC,EAAA,CApCQD,UAAU;EAAA,QACMX,UAAU;AAAA;AAAA+C,EAAA,GAD1BpC,UAAU;AAsCnB,eAAeA,UAAU;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}